@model AppointmentViewModel
@{
    ViewData["Title"] = "Appointment Cancellation";
}

<div class="container my-5">
    <div class="row align-items-center">
        <div class="col-md-6">
            <h4>Are you sure you want to cancel your appointment with @Model.ActiveDoctor.DoctorName on @Model.ActiveAppointment.AppointmentDate?.ToString("MMMM dd, yyyy") at @Model.ActiveAppointment.AppointmentDate?.ToString("hh:mm tt")?</h4>

            <div class="d-flex justify-content-center mt-4">
                <form method="post" asp-controller="Healthcare" asp-action="CancelAppointment" asp-route-id="@Model.ActiveAppointment.AppointmentId" class="d-flex gap-3">
                    <button type="submit" class="btn btn-danger">Yes</button>

                    <!-- Putting a spinner beside the 'Yes Cancel' button -->
                    <div id="spinner" class="spinner-border text-danger spinner-border-sm" role="status" style="display: none;">
                        <span class="visually-hidden">Loading...</span>
                    </div>

                    <a asp-controller="Healthcare" asp-action="GetAllAppointments" class="btn btn-secondary">No</a>
                </form>
            </div>
        </div>
        <div class="col-md-6">
            <img src="~/Images/Calendar.png" alt="Calendar" class="img-fluid" />
        </div>
    </div>
</div>



<!-- Spinner functionality for the cancel/yes button -->
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const form = document.querySelector("form");
        const spinner = document.getElementById("spinner");

        form.addEventListener("submit", function (e) {
            if (!form.checkValidity()) {
                // do not show the spinner if the form has validation errors
                return;
            }

            // only show the spinner if the form is correctly filled
            spinner.style.display = "inline-block";
        });
    });
</script>
