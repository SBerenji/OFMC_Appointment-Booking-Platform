@using OFMC_Booking_Platform.Entities
@model AppointmentViewModel

@{
    ViewData["Title"] = "Book Appointment";
}


<div class="container my-5">
    <h4 class="fw-bold">Book your appointment for @Model.ActiveDoctor.DoctorName</h4>
    <hr />

    <form asp-controller="Healthcare" asp-action="BookAppointment" method="post" enctype="application/x-www-form-urlencoded">
        <div class="text-danger" asp-validation-summary="All"></div>

        <input type="hidden" asp-for="ActiveDoctor.DoctorId" />
        <input type="hidden" asp-for="ActivePatient.PatientId" />
        <input type="hidden" asp-for="ActivePatient.FirstName" />
        <input type="hidden" asp-for="ActivePatient.LastName" />
        <input type="hidden" asp-for="ActivePatient.DOB" />
        <input type="hidden" asp-for="ActivePatient.PatientEmail" />
        <input type="hidden" asp-for="ActivePatient.UserId" />

        <div class="row">
            <div class="col-md-6">

                <div class="mb-3">
                    <label asp-for="ActiveAppointment.PatientName" class="form-label">Patient Name <span class="text-danger">*</span></label>
                    <input type="text" asp-for="ActiveAppointment.PatientName" class="form-control"  />
                </div>

                <!-- Time Slot Dropdown -->
                <div class="mb-3">
                    <label asp-for="ActiveAppointment.AppointmentDate" class="form-label">Select an Available Time Slot<span class="text-danger">*</span></label>
                    <select asp-for="ActiveAppointment.AppointmentDate" class="form-control">
                        @if (Model.Availability != null && Model.Availability.Any())
                        {
                            @foreach (var slot in Model.Availability)
                            {
                                <option value="@slot.SlotDateTime">@slot.SlotDateTime.ToString("f")</option>
                            }
                        }
                        else
                        {
                            <option value="">No available slots</option>
                        }
                    </select>
                </div>

                <!-- Contact Method -->
                <div class="mb-3">
                    <label class="form-label d-block">What is your preferred method of contact? <span class="text-danger">*</span></label>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" name="ActiveAppointment.ContactMethod" id="contactEmail" value="@nameof(ContactMethod.Email)" checked />
                        <label class="form-check-label" for="contactEmail">Email</label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" name="ActiveAppointment.ContactMethod" id="contactPhone" value="@nameof(ContactMethod.Phone)" />
                        <label class="form-check-label" for="contactPhone">Phone</label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" name="ActiveAppointment.ContactMethod" id="contactText" value="@nameof(ContactMethod.Text)" />
                        <label class="form-check-label" for="contactText">Text</label>
                    </div>
                </div>

                <!-- Email Input (shown conditionally) -->
                <div class="mb-3" id="emailField" style="display: none;">
                    <label asp-for="ActiveAppointment.AppointmentEmail" class="form-label">Email Address</label>
                    <input type="text" asp-for="ActiveAppointment.AppointmentEmail" class="form-control" id="emailInput" />
                </div>

                <!-- Phone Field that is initially hidden -->
                <div class="mb-3" id="phoneField" style="display: none;">
                    <label asp-for="ActiveAppointment.AppointmentPhone" class="form-label">Phone Number</label>
                    <input type="text" asp-for="ActiveAppointment.AppointmentPhone" class="form-control" id="phoneInput" />
                </div>

                <div class="d-flex gap-3 mt-4">
                    <button type="submit" class="btn btn-success px-4">Save</button>
                    <a asp-controller="Healthcare" asp-action="GetAllAppointments" class="btn btn-secondary px-4">Cancel</a>
                </div>
            </div>

            <!-- Right Column: Notes -->
            <div class="col-md-6">
                <label asp-for="ActiveAppointment.Notes" class="form-label">Please describe the reason for your visit (e.g., checkup, flu symptoms, chronic condition, follow-up, etc.)</label>
                <textarea asp-for="ActiveAppointment.Notes" class="form-control" rows="10"></textarea>
            </div>
        </div>
    </form>
</div>










<!-- A JS plugin used for automatic filling of the phone number field in a specific format -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/cleave.js/1.6.0/cleave.min.js"></script>


<!-- JavaScript code that would be used to hide and appear the contact method field based on the radio buttons selects -->
<script>
    document.addEventListener('DOMContentLoaded', function () {
        var contactEmail = document.getElementById('contactEmail');
        var contactPhone = document.getElementById('contactPhone');
        var contactText = document.getElementById('contactText');
        var emailField = document.getElementById('emailField');
        var phoneField = document.getElementById('phoneField');


        // The default checked contact method would be Email and the initial state is set based on this
        function updateContactFields() {
            if (contactEmail.checked) {
                emailField.style.display = 'block';
                phoneField.style.display = 'none';
            } else {
                emailField.style.display = 'none';
                phoneField.style.display = 'block';
            }
        }


        // Add event listeners to update the visibility of preferred contact method fields
        contactEmail.addEventListener('change', updateContactFields);
        contactPhone.addEventListener('change', updateContactFields);
        contactText.addEventListener('change', updateContactFields);

        updateContactFields(); // set initial state

    });
</script>




@section Scripts {
    <!-- Use the proper UMD version that defines `Inputmask` globally -->

    <script src="https://unpkg.com/inputmask@5.0.8/dist/inputmask.min.js"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {

            Inputmask({
                mask: "+1999-999-9999",
                placeholder: "_",
                showMaskOnHover: false,
                showMaskOnFocus: true
            }).mask(document.getElementById("phoneInput"));

        });
    </script>
}